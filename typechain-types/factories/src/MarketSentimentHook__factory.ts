/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MarketSentimentHook,
  MarketSentimentHookInterface,
} from "../../src/MarketSentimentHook";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPoolManager",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "contract MarketSentimentOracle",
        name: "_oracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "HookNotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPoolManager",
    type: "error",
  },
  {
    inputs: [],
    name: "BASE_FEE",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BEARISH_THRESHOLD",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BULLISH_THRESHOLD",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_FEE",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "Currency",
            name: "currency0",
            type: "address",
          },
          {
            internalType: "Currency",
            name: "currency1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickSpacing",
            type: "int24",
          },
          {
            internalType: "contract IHooks",
            name: "hooks",
            type: "address",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "int256",
            name: "liquidityDelta",
            type: "int256",
          },
          {
            internalType: "bytes32",
            name: "salt",
            type: "bytes32",
          },
        ],
        internalType: "struct IPoolManager.ModifyLiquidityParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "BalanceDelta",
        name: "delta",
        type: "int256",
      },
      {
        internalType: "BalanceDelta",
        name: "feesAccrued",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "hookData",
        type: "bytes",
      },
    ],
    name: "afterAddLiquidity",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
      {
        internalType: "BalanceDelta",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "Currency",
            name: "currency0",
            type: "address",
          },
          {
            internalType: "Currency",
            name: "currency1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickSpacing",
            type: "int24",
          },
          {
            internalType: "contract IHooks",
            name: "hooks",
            type: "address",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "hookData",
        type: "bytes",
      },
    ],
    name: "afterDonate",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "Currency",
            name: "currency0",
            type: "address",
          },
          {
            internalType: "Currency",
            name: "currency1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickSpacing",
            type: "int24",
          },
          {
            internalType: "contract IHooks",
            name: "hooks",
            type: "address",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "afterInitialize",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "Currency",
            name: "currency0",
            type: "address",
          },
          {
            internalType: "Currency",
            name: "currency1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickSpacing",
            type: "int24",
          },
          {
            internalType: "contract IHooks",
            name: "hooks",
            type: "address",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "int256",
            name: "liquidityDelta",
            type: "int256",
          },
          {
            internalType: "bytes32",
            name: "salt",
            type: "bytes32",
          },
        ],
        internalType: "struct IPoolManager.ModifyLiquidityParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "BalanceDelta",
        name: "delta",
        type: "int256",
      },
      {
        internalType: "BalanceDelta",
        name: "feesAccrued",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "hookData",
        type: "bytes",
      },
    ],
    name: "afterRemoveLiquidity",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
      {
        internalType: "BalanceDelta",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "Currency",
            name: "currency0",
            type: "address",
          },
          {
            internalType: "Currency",
            name: "currency1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickSpacing",
            type: "int24",
          },
          {
            internalType: "contract IHooks",
            name: "hooks",
            type: "address",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "zeroForOne",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "amountSpecified",
            type: "int256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct IPoolManager.SwapParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "BalanceDelta",
        name: "delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "hookData",
        type: "bytes",
      },
    ],
    name: "afterSwap",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "Currency",
            name: "currency0",
            type: "address",
          },
          {
            internalType: "Currency",
            name: "currency1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickSpacing",
            type: "int24",
          },
          {
            internalType: "contract IHooks",
            name: "hooks",
            type: "address",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "int256",
            name: "liquidityDelta",
            type: "int256",
          },
          {
            internalType: "bytes32",
            name: "salt",
            type: "bytes32",
          },
        ],
        internalType: "struct IPoolManager.ModifyLiquidityParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "hookData",
        type: "bytes",
      },
    ],
    name: "beforeAddLiquidity",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "Currency",
            name: "currency0",
            type: "address",
          },
          {
            internalType: "Currency",
            name: "currency1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickSpacing",
            type: "int24",
          },
          {
            internalType: "contract IHooks",
            name: "hooks",
            type: "address",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "hookData",
        type: "bytes",
      },
    ],
    name: "beforeDonate",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "Currency",
            name: "currency0",
            type: "address",
          },
          {
            internalType: "Currency",
            name: "currency1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickSpacing",
            type: "int24",
          },
          {
            internalType: "contract IHooks",
            name: "hooks",
            type: "address",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "beforeInitialize",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "Currency",
            name: "currency0",
            type: "address",
          },
          {
            internalType: "Currency",
            name: "currency1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickSpacing",
            type: "int24",
          },
          {
            internalType: "contract IHooks",
            name: "hooks",
            type: "address",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "int256",
            name: "liquidityDelta",
            type: "int256",
          },
          {
            internalType: "bytes32",
            name: "salt",
            type: "bytes32",
          },
        ],
        internalType: "struct IPoolManager.ModifyLiquidityParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "hookData",
        type: "bytes",
      },
    ],
    name: "beforeRemoveLiquidity",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "Currency",
            name: "currency0",
            type: "address",
          },
          {
            internalType: "Currency",
            name: "currency1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickSpacing",
            type: "int24",
          },
          {
            internalType: "contract IHooks",
            name: "hooks",
            type: "address",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "zeroForOne",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "amountSpecified",
            type: "int256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct IPoolManager.SwapParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "hookData",
        type: "bytes",
      },
    ],
    name: "beforeSwap",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
      {
        internalType: "BeforeSwapDelta",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "sentiment",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "swapAmount",
        type: "uint256",
      },
    ],
    name: "calculateAdjustedFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapAmount",
        type: "uint256",
      },
    ],
    name: "calculateDynamicFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "feeTiers",
    outputs: [
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHookPermissions",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "beforeInitialize",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "afterInitialize",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "beforeAddLiquidity",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "afterAddLiquidity",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "beforeRemoveLiquidity",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "afterRemoveLiquidity",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "beforeSwap",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "afterSwap",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "beforeDonate",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "afterDonate",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "beforeSwapReturnDelta",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "afterSwapReturnDelta",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "afterAddLiquidityReturnDelta",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "afterRemoveLiquidityReturnDelta",
            type: "bool",
          },
        ],
        internalType: "struct Hooks.Permissions",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract MarketSentimentOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolManager",
    outputs: [
      {
        internalType: "contract IPoolManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tierIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newThreshold",
        type: "uint256",
      },
      {
        internalType: "uint24",
        name: "newFee",
        type: "uint24",
      },
    ],
    name: "updateFeeTier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620016c5380380620016c5833981016040819052620000349162000484565b6001600160a01b038216608052816200004d30620001ff565b506001600160a01b031660a05250604080518082018252670de0b6b3a7640000815261012c6020808301918252600080546001808201835582805294517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56360029283028181019290925594517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564918201805462ffffff1990811662ffffff938416179091558851808a018a52674563918244f4000081526101f48188019081528654808b0188558780529151918602808a019290925551908401805483169184169190911790558851808a018a52678ac7230489e8000081526102bc8188019081528654808b0188558780529151918602808a019290925551908401805483169184169190911790558851808a018a526802b5e3af16b188000081526103e88188019081528654808b0188558780529151918602808a019290925551908401805483169184169190911790558851808a019099526000198952610fa0958901958652845497880185559380529651959091029384019490945590519190920180549092169216919091179055620004c3565b620002f481620002ee604080516101c081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c081018252600080825260208201819052918101829052606081018290526080810182905260a08101829052600160c082015260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b620002f7565b50565b80511515612000831615151415806200031c5750602081015115156110008316151514155b80620003345750604081015115156108008316151514155b806200034c5750606081015115156104008316151514155b80620003645750608081015115156102008316151514155b806200037c575060a081015115156101008316151514155b8062000393575060c0810151151560808316151514155b80620003aa575060e0810151151560408316151514155b80620003c25750610100810151151560208316151514155b80620003da5750610120810151151560108316151514155b80620003f25750610140810151151560088316151514155b806200040a5750610160810151151560048316151514155b80620004225750610180810151151560028316151514155b806200043a57506101a0810151151560018316151514155b15620004535762000453630732d7b560e51b8362000457565b5050565b816000526001600160a01b03811660045260246000fd5b6001600160a01b0381168114620002f457600080fd5b600080604083850312156200049857600080fd5b8251620004a5816200046e565b6020840151909250620004b8816200046e565b809150509250929050565b60805160a0516111a462000521600039600081816102730152610a840152600081816104150152818161046c01528181610549015281816105b30152818161061d0152818161067e015281816106e601526107c901526111a46000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80639f063efc116100b8578063c4e833ce1161007c578063c4e833ce14610307578063d62a0f81146103fd578063dc4c90d314610410578063dc98354e14610437578063e1b4af69146102eb578063e9f2c4d31461044a57600080fd5b80639f063efc14610228578063b132d9cb146102ad578063b47b2fb1146102b5578063b6a8b0fa146102eb578063bc063e1a146102fe57600080fd5b80633dade8b81161010a5780633dade8b8146101d7578063575e24b4146101ea5780636c2bbe7e146102285780636fe7e6eb1461025b57806376c7a3c7146101ba5780637dc0d1d01461026e57600080fd5b80630bf6e3d21461014757806321d0ee7014610162578063230ed44a1461018e578063259982e5146101625780633d18651e146101ba575b600080fd5b61014f601e81565b6040519081526020015b60405180910390f35b610175610170366004610c01565b61045f565b6040516001600160e01b03199091168152602001610159565b6101a161019c366004610c7d565b6104c1565b6040805192835262ffffff909116602083015201610159565b6101c36101f481565b60405162ffffff9091168152602001610159565b6101c36101e5366004610c96565b6104f4565b6101fd6101f8366004610cca565b61053a565b604080516001600160e01b03199094168452602084019290925262ffffff1690820152606001610159565b61023b610236366004610d29565b6105a5565b604080516001600160e01b03199093168352602083019190915201610159565b610175610269366004610dba565b610610565b6102957f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610159565b61014f604681565b6102c86102c3366004610e1d565b610670565b604080516001600160e01b03199093168352600f9190910b602083015201610159565b6101756102f9366004610ea3565b6106d9565b6101c361271081565b6103f0604080516101c081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c081018252600080825260208201819052918101829052606081018290526080810182905260a08101829052600160c082015260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b6040516101599190610f02565b6101c361040b366004610c7d565b61073d565b6102957f000000000000000000000000000000000000000000000000000000000000000081565b610175610445366004610ff1565b6107bc565b61045d61045836600461103b565b61081a565b005b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104aa5760405163570c108560e11b815260040160405180910390fd5b6104b78686868686610a61565b9695505050505050565b600081815481106104d157600080fd5b60009182526020909120600290910201805460019091015490915062ffffff1682565b60006046831261051e57606461050d6101f46050611087565b61051791906110a6565b9050610534565b601e831361052f576105178261073d565b506101f45b92915050565b60008080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105875760405163570c108560e11b815260040160405180910390fd5b6105948888888888610a7c565b925092509250955095509592505050565b600080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105f15760405163570c108560e11b815260040160405180910390fd5b61060089898989898989610b5a565b9150915097509795505050505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461065b5760405163570c108560e11b815260040160405180910390fd5b61066785858585610a61565b95945050505050565b600080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106bc5760405163570c108560e11b815260040160405180910390fd5b6106ca888888888888610b5a565b91509150965096945050505050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107245760405163570c108560e11b815260040160405180910390fd5b610732878787878787610a61565b979650505050505050565b6000805b6000548110156107b2576000818154811061075e5761075e6110d6565b9060005260206000209060020201600001548310156107aa576000818154811061078a5761078a6110d6565b600091825260209091206001600290920201015462ffffff169392505050565b600101610741565b5061271092915050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108075760405163570c108560e11b815260040160405180910390fd5b610812848484610a61565b949350505050565b60005483106108655760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840e8d2cae440d2dcc8caf60731b60448201526064015b60405180910390fd5b6101f462ffffff821610801590610883575061271062ffffff821611155b6108c25760405162461bcd60e51b815260206004820152601060248201526f466565206f7574206f662072616e676560801b604482015260640161085c565b821561095a5760006108d56001856110ec565b815481106108e5576108e56110d6565b906000526020600020906002020160000154821161095a5760405162461bcd60e51b815260206004820152602c60248201527f5468726573686f6c64206d7573742062652067726561746572207468616e207060448201526b3932bb34b7bab9903a34b2b960a11b606482015260840161085c565b600054610969906001906110ec565b8310156109fb57600061097d8460016110ff565b8154811061098d5761098d6110d6565b90600052602060002090600202016000015482106109fb5760405162461bcd60e51b815260206004820152602560248201527f5468726573686f6c64206d757374206265206c657373207468616e206e657874604482015264103a34b2b960d91b606482015260840161085c565b60405180604001604052808381526020018262ffffff1681525060008481548110610a2857610a286110d6565b60009182526020918290208351600292909202019081559101516001909101805462ffffff191662ffffff909216919091179055505050565b6000604051630a85dc2960e01b815260040160405180910390fd5b6000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b8c69bca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ae0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b049190611112565b90506000610b1360328361112b565b90506000610b3e8260008b6020013512610b31578a602001356104f4565b6101e560208c0135611152565b6315d7892d60e21b9c60009c50909a5098505050505050505050565b600080604051630a85dc2960e01b815260040160405180910390fd5b6001600160a01b0381168114610b8b57600080fd5b50565b600060a08284031215610ba057600080fd5b50919050565b600060808284031215610ba057600080fd5b60008083601f840112610bca57600080fd5b50813567ffffffffffffffff811115610be257600080fd5b602083019150836020828501011115610bfa57600080fd5b9250929050565b60008060008060006101608688031215610c1a57600080fd5b8535610c2581610b76565b9450610c348760208801610b8e565b9350610c438760c08801610ba6565b925061014086013567ffffffffffffffff811115610c6057600080fd5b610c6c88828901610bb8565b969995985093965092949392505050565b600060208284031215610c8f57600080fd5b5035919050565b60008060408385031215610ca957600080fd5b50508035926020909101359150565b600060608284031215610ba057600080fd5b60008060008060006101408688031215610ce357600080fd5b8535610cee81610b76565b9450610cfd8760208801610b8e565b9350610d0c8760c08801610cb8565b925061012086013567ffffffffffffffff811115610c6057600080fd5b60008060008060008060006101a0888a031215610d4557600080fd5b8735610d5081610b76565b9650610d5f8960208a01610b8e565b9550610d6e8960c08a01610ba6565b94506101408801359350610160880135925061018088013567ffffffffffffffff811115610d9b57600080fd5b610da78a828b01610bb8565b989b979a50959850939692959293505050565b6000806000806101008587031215610dd157600080fd5b8435610ddc81610b76565b9350610deb8660208701610b8e565b925060c0850135610dfb81610b76565b915060e0850135600281900b8114610e1257600080fd5b939692955090935050565b6000806000806000806101608789031215610e3757600080fd5b8635610e4281610b76565b9550610e518860208901610b8e565b9450610e608860c08901610cb8565b9350610120870135925061014087013567ffffffffffffffff811115610e8557600080fd5b610e9189828a01610bb8565b979a9699509497509295939492505050565b6000806000806000806101208789031215610ebd57600080fd5b8635610ec881610b76565b9550610ed78860208901610b8e565b945060c0870135935060e0870135925061010087013567ffffffffffffffff811115610e8557600080fd5b8151151581526101c081016020830151610f20602084018215159052565b506040830151610f34604084018215159052565b506060830151610f48606084018215159052565b506080830151610f5c608084018215159052565b5060a0830151610f7060a084018215159052565b5060c0830151610f8460c084018215159052565b5060e0830151610f9860e084018215159052565b5061010083810151151590830152610120808401511515908301526101408084015115159083015261016080840151151590830152610180808401511515908301526101a080840151801515828501525b505092915050565b600080600060e0848603121561100657600080fd5b833561101181610b76565b92506110208560208601610b8e565b915060c084013561103081610b76565b809150509250925092565b60008060006060848603121561105057600080fd5b8335925060208401359150604084013562ffffff8116811461103057600080fd5b634e487b7160e01b600052601160045260246000fd5b62ffffff818116838216028082169190828114610fe957610fe9611071565b600062ffffff808416806110ca57634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b634e487b7160e01b600052603260045260246000fd5b8181038181111561053457610534611071565b8082018082111561053457610534611071565b60006020828403121561112457600080fd5b5051919050565b818103600083128015838313168383128216171561114b5761114b611071565b5092915050565b6000600160ff1b820161116757611167611071565b506000039056fea2646970667358221220832787fa76e2a47a20d0a7c6015d20c1d75b8cdb6d7da1f8cbc774bcde6e84eb64736f6c63430008180033";

type MarketSentimentHookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketSentimentHookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarketSentimentHook__factory extends ContractFactory {
  constructor(...args: MarketSentimentHookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _poolManager: AddressLike,
    _oracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_poolManager, _oracle, overrides || {});
  }
  override deploy(
    _poolManager: AddressLike,
    _oracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_poolManager, _oracle, overrides || {}) as Promise<
      MarketSentimentHook & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MarketSentimentHook__factory {
    return super.connect(runner) as MarketSentimentHook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketSentimentHookInterface {
    return new Interface(_abi) as MarketSentimentHookInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MarketSentimentHook {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MarketSentimentHook;
  }
}
