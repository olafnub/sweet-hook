/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  LPFeeLibrary,
  LPFeeLibraryInterface,
} from "../../../../../@uniswap/v4-core/src/libraries/LPFeeLibrary";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    name: "LPFeeTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "DYNAMIC_FEE_FLAG",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_LP_FEE",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OVERRIDE_FEE_FLAG",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REMOVE_OVERRIDE_MASK",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c8610039600b82828239805160001a60731461002c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060515760003560e01c80633b01d64d1460565780633fc48eba1460775780636f95ebcf146080578063f26ef49d146089575b600080fd5b605f6240000081565b60405162ffffff909116815260200160405180910390f35b605f620f424081565b605f62bfffff81565b605f628000008156fea2646970667358221220ab8560b285e49d6cabd347e9a4f8a103bbddf7600ceef3b31a8ff077536704bc64736f6c63430008180033";

type LPFeeLibraryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LPFeeLibraryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LPFeeLibrary__factory extends ContractFactory {
  constructor(...args: LPFeeLibraryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LPFeeLibrary & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LPFeeLibrary__factory {
    return super.connect(runner) as LPFeeLibrary__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPFeeLibraryInterface {
    return new Interface(_abi) as LPFeeLibraryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LPFeeLibrary {
    return new Contract(address, _abi, runner) as unknown as LPFeeLibrary;
  }
}
